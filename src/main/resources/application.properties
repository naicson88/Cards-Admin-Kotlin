
spring.application.name=admin
server.port=9090
use-broker=KAFKA

# Configurações do H2
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# Configuração do H2 Console (opcional)
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# JPA / Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

spring.rabbitmq.host=beaver-01.rmq.cloudamqp.com
##spring.rabbitmq.port=5672
spring.rabbitmq.username=gcbaacvj
spring.rabbitmq.virtual-host=gcbaacvj
spring.rabbitmq.password=ns4Cc0W9Lt1VALuxGDjQkocJ966q_iV7

# Configuração do Kafka
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=cards-admin-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Configuração adicional opcional
# Habilita auto-commit para consumidores (caso contrário, gerencia manualmente)
spring.kafka.consumer.enable-auto-commit=true
# Intervalo de commit do consumidor (em milissegundos)
spring.kafka.consumer.auto-commit-interval=1000


